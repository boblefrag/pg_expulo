# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: postgresql

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v ./...

    - name: Archive Executable
      uses: actions/upload-artifact@v4
      with:
        name: pg_expulo
        path: pg_expulo

  integration_tests:
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: rodoq/postgres-pgtap:16

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Install pg_tap / pg_prove
      run: sudo apt-get install libtap-parser-sourcehandler-pgtap-perl

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Download Executable
      uses: actions/download-artifact@v4
      with:
        name: pg_expulo

    - name: Change file permissions on pg_expulo
      run: chmod +x pg_expulo

    - name: install pgtap on template1
      run: psql --host localhost --username postgres --dbname template1 -c "CREATE EXTENSION pgtap"
      env:
        PGPASSWORD: postgres

    - name: create db source
      run: psql "postgres://postgres:postgres@localhost:5432/postgres" -c 'CREATE DATABASE source'

    - name: create db target
      run: psql "postgres://postgres:postgres@localhost:5432/postgres" -c 'CREATE DATABASE target'

    - name: create structure source
      run: psql "postgres://postgres:postgres@localhost:5432/source" -f data_test/tables.sql

    - name: create structure target
      run: psql "postgres://postgres:postgres@localhost:5432/target" -f data_test/tables.sql

    - name: fill db source
      run: psql "postgres://postgres:postgres@localhost:5432/source" -f data_test/data.sql

    - name: fill db target
      run: psql "postgres://postgres:postgres@localhost:5432/target" -f data_test/data-target.sql


    - name: run binary
      run: ./pg_expulo --config samples/config-ci-full.json
      env:
        PGSRCHOST: localhost
        PGSRCPORT: 5432
        PGSRCUSER: postgres
        PGSRCPASSWORD: postgres
        PGSRCDATABASE: source
        PGDSTHOST: localhost
        PGDSTPORT: 5432
        PGDSTUSER: postgres
        PGDSTPASSWORD: postgres
        PGDSTDATABASE: target

    - name: check results in target
      run: pg_prove -v --host localhost --dbname target --username postgres data_test/*_test.sql
      env:
        PGPASSWORD: postgres

    - name: run binary with purge
      run: ./pg_expulo --config samples/config-ci-full.json --purge
      env:
        PGSRCHOST: localhost
        PGSRCPORT: 5432
        PGSRCUSER: postgres
        PGSRCPASSWORD: postgres
        PGSRCDATABASE: source
        PGDSTHOST: localhost
        PGDSTPORT: 5432
        PGDSTUSER: postgres
        PGDSTPASSWORD: postgres
        PGDSTDATABASE: target

    - name: check results in target
      run: pg_prove -v --host localhost --dbname target --username postgres data_test/tables_empty.sql
      env:
        PGPASSWORD: postgres

    - name: create structure source
      run: psql "postgres://postgres:postgres@localhost:5432/source" -f data_test/tables.sql

    - name: create structure target
      run: psql "postgres://postgres:postgres@localhost:5432/target" -f data_test/tables.sql

    - name: check results in target, must be empty
      run: pg_prove -v --host localhost --dbname target --username postgres data_test/tables_empty.sql
      env:
        PGPASSWORD: postgres

    - name: run binary with try option
      run: ./pg_expulo --config samples/config-ci-full.json --try
      env:
        PGSRCHOST: localhost
        PGSRCPORT: 5432
        PGSRCUSER: postgres
        PGSRCPASSWORD: postgres
        PGSRCDATABASE: source
        PGDSTHOST: localhost
        PGDSTPORT: 5432
        PGDSTUSER: postgres
        PGDSTPASSWORD: postgres
        PGDSTDATABASE: target

    - name: check results in target, still empty
      run: pg_prove -v --host localhost --dbname target --username postgres data_test/tables_empty.sql
      env:
        PGPASSWORD: postgres
